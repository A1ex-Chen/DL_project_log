import argparse
import tempfile

import torch
from accelerate import load_checkpoint_and_dispatch

from diffusers.models.transformers.prior_transformer import PriorTransformer
from diffusers.pipelines.shap_e import ShapERenderer


"""
Example - From the diffusers root directory:

Download weights:
```sh
$ wget  "https://openaipublic.azureedge.net/main/shap-e/text_cond.pt"
```

Convert the model:
```sh
$ python scripts/convert_shap_e_to_diffusers.py \
      --prior_checkpoint_path  /home/yiyi_huggingface_co/shap-e/shap_e_model_cache/text_cond.pt \
      --prior_image_checkpoint_path /home/yiyi_huggingface_co/shap-e/shap_e_model_cache/image_cond.pt \
      --transmitter_checkpoint_path /home/yiyi_huggingface_co/shap-e/shap_e_model_cache/transmitter.pt\
      --dump_path /home/yiyi_huggingface_co/model_repo/shap-e-img2img/shap_e_renderer\
      --debug renderer
```
"""


# prior

PRIOR_ORIGINAL_PREFIX = "wrapped"

PRIOR_CONFIG = {
    "num_attention_heads": 16,
    "attention_head_dim": 1024 // 16,
    "num_layers": 24,
    "embedding_dim": 1024,
    "num_embeddings": 1024,
    "additional_embeddings": 0,
    "time_embed_act_fn": "gelu",
    "norm_in_type": "layer",
    "encoder_hid_proj_type": None,
    "added_emb_type": None,
    "time_embed_dim": 1024 * 4,
    "embedding_proj_dim": 768,
    "clip_embed_dim": 1024 * 2,
}










# done prior


# prior_image (only slightly different from prior)


PRIOR_IMAGE_ORIGINAL_PREFIX = "wrapped"

# Uses default arguments
PRIOR_IMAGE_CONFIG = {
    "num_attention_heads": 8,
    "attention_head_dim": 1024 // 8,
    "num_layers": 24,
    "embedding_dim": 1024,
    "num_embeddings": 1024,
    "additional_embeddings": 0,
    "time_embed_act_fn": "gelu",
    "norm_in_type": "layer",
    "embedding_proj_norm_type": "layer",
    "encoder_hid_proj_type": None,
    "added_emb_type": None,
    "time_embed_dim": 1024 * 4,
    "embedding_proj_dim": 1024,
    "clip_embed_dim": 1024 * 2,
}






# done prior_image


# renderer

## create the lookup table for marching cubes method used in MeshDecoder

MC_TABLE = [
    [],
    [[0, 1, 0, 2, 0, 4]],
    [[1, 0, 1, 5, 1, 3]],
    [[0, 4, 1, 5, 0, 2], [1, 5, 1, 3, 0, 2]],
    [[2, 0, 2, 3, 2, 6]],
    [[0, 1, 2, 3, 0, 4], [2, 3, 2, 6, 0, 4]],
    [[1, 0, 1, 5, 1, 3], [2, 6, 0, 2, 3, 2]],
    [[3, 2, 2, 6, 3, 1], [3, 1, 2, 6, 1, 5], [1, 5, 2, 6, 0, 4]],
    [[3, 1, 3, 7, 3, 2]],
    [[0, 2, 0, 4, 0, 1], [3, 7, 2, 3, 1, 3]],
    [[1, 5, 3, 7, 1, 0], [3, 7, 3, 2, 1, 0]],
    [[2, 0, 0, 4, 2, 3], [2, 3, 0, 4, 3, 7], [3, 7, 0, 4, 1, 5]],
    [[2, 0, 3, 1, 2, 6], [3, 1, 3, 7, 2, 6]],
    [[1, 3, 3, 7, 1, 0], [1, 0, 3, 7, 0, 4], [0, 4, 3, 7, 2, 6]],
    [[0, 1, 1, 5, 0, 2], [0, 2, 1, 5, 2, 6], [2, 6, 1, 5, 3, 7]],
    [[0, 4, 1, 5, 3, 7], [0, 4, 3, 7, 2, 6]],
    [[4, 0, 4, 6, 4, 5]],
    [[0, 2, 4, 6, 0, 1], [4, 6, 4, 5, 0, 1]],
    [[1, 5, 1, 3, 1, 0], [4, 6, 5, 4, 0, 4]],
    [[5, 1, 1, 3, 5, 4], [5, 4, 1, 3, 4, 6], [4, 6, 1, 3, 0, 2]],
    [[2, 0, 2, 3, 2, 6], [4, 5, 0, 4, 6, 4]],
    [[6, 4, 4, 5, 6, 2], [6, 2, 4, 5, 2, 3], [2, 3, 4, 5, 0, 1]],
    [[2, 6, 2, 0, 3, 2], [1, 0, 1, 5, 3, 1], [6, 4, 5, 4, 0, 4]],
    [[1, 3, 5, 4, 1, 5], [1, 3, 4, 6, 5, 4], [1, 3, 3, 2, 4, 6], [3, 2, 2, 6, 4, 6]],
    [[3, 1, 3, 7, 3, 2], [6, 4, 5, 4, 0, 4]],
    [[4, 5, 0, 1, 4, 6], [0, 1, 0, 2, 4, 6], [7, 3, 2, 3, 1, 3]],
    [[3, 2, 1, 0, 3, 7], [1, 0, 1, 5, 3, 7], [6, 4, 5, 4, 0, 4]],
    [[3, 7, 3, 2, 1, 5], [3, 2, 6, 4, 1, 5], [1, 5, 6, 4, 5, 4], [3, 2, 2, 0, 6, 4]],
    [[3, 7, 2, 6, 3, 1], [2, 6, 2, 0, 3, 1], [5, 4, 0, 4, 6, 4]],
    [[1, 0, 1, 3, 5, 4], [1, 3, 2, 6, 5, 4], [1, 3, 3, 7, 2, 6], [5, 4, 2, 6, 4, 6]],
    [[0, 1, 1, 5, 0, 2], [0, 2, 1, 5, 2, 6], [2, 6, 1, 5, 3, 7], [4, 5, 0, 4, 4, 6]],
    [[6, 2, 4, 6, 4, 5], [4, 5, 5, 1, 6, 2], [6, 2, 5, 1, 7, 3]],
    [[5, 1, 5, 4, 5, 7]],
    [[0, 1, 0, 2, 0, 4], [5, 7, 1, 5, 4, 5]],
    [[1, 0, 5, 4, 1, 3], [5, 4, 5, 7, 1, 3]],
    [[4, 5, 5, 7, 4, 0], [4, 0, 5, 7, 0, 2], [0, 2, 5, 7, 1, 3]],
    [[2, 0, 2, 3, 2, 6], [7, 5, 1, 5, 4, 5]],
    [[2, 6, 0, 4, 2, 3], [0, 4, 0, 1, 2, 3], [7, 5, 1, 5, 4, 5]],
    [[5, 7, 1, 3, 5, 4], [1, 3, 1, 0, 5, 4], [6, 2, 0, 2, 3, 2]],
    [[3, 1, 3, 2, 7, 5], [3, 2, 0, 4, 7, 5], [3, 2, 2, 6, 0, 4], [7, 5, 0, 4, 5, 4]],
    [[3, 7, 3, 2, 3, 1], [5, 4, 7, 5, 1, 5]],
    [[0, 4, 0, 1, 2, 0], [3, 1, 3, 7, 2, 3], [4, 5, 7, 5, 1, 5]],
    [[7, 3, 3, 2, 7, 5], [7, 5, 3, 2, 5, 4], [5, 4, 3, 2, 1, 0]],
    [[0, 4, 2, 3, 0, 2], [0, 4, 3, 7, 2, 3], [0, 4, 4, 5, 3, 7], [4, 5, 5, 7, 3, 7]],
    [[2, 0, 3, 1, 2, 6], [3, 1, 3, 7, 2, 6], [4, 5, 7, 5, 1, 5]],
    [[1, 3, 3, 7, 1, 0], [1, 0, 3, 7, 0, 4], [0, 4, 3, 7, 2, 6], [5, 7, 1, 5, 5, 4]],
    [[2, 6, 2, 0, 3, 7], [2, 0, 4, 5, 3, 7], [3, 7, 4, 5, 7, 5], [2, 0, 0, 1, 4, 5]],
    [[4, 0, 5, 4, 5, 7], [5, 7, 7, 3, 4, 0], [4, 0, 7, 3, 6, 2]],
    [[4, 6, 5, 7, 4, 0], [5, 7, 5, 1, 4, 0]],
    [[1, 0, 0, 2, 1, 5], [1, 5, 0, 2, 5, 7], [5, 7, 0, 2, 4, 6]],
    [[0, 4, 4, 6, 0, 1], [0, 1, 4, 6, 1, 3], [1, 3, 4, 6, 5, 7]],
    [[0, 2, 4, 6, 5, 7], [0, 2, 5, 7, 1, 3]],
    [[5, 1, 4, 0, 5, 7], [4, 0, 4, 6, 5, 7], [3, 2, 6, 2, 0, 2]],
    [[2, 3, 2, 6, 0, 1], [2, 6, 7, 5, 0, 1], [0, 1, 7, 5, 1, 5], [2, 6, 6, 4, 7, 5]],
    [[0, 4, 4, 6, 0, 1], [0, 1, 4, 6, 1, 3], [1, 3, 4, 6, 5, 7], [2, 6, 0, 2, 2, 3]],
    [[3, 1, 2, 3, 2, 6], [2, 6, 6, 4, 3, 1], [3, 1, 6, 4, 7, 5]],
    [[4, 6, 5, 7, 4, 0], [5, 7, 5, 1, 4, 0], [2, 3, 1, 3, 7, 3]],
    [[1, 0, 0, 2, 1, 5], [1, 5, 0, 2, 5, 7], [5, 7, 0, 2, 4, 6], [3, 2, 1, 3, 3, 7]],
    [[0, 1, 0, 4, 2, 3], [0, 4, 5, 7, 2, 3], [0, 4, 4, 6, 5, 7], [2, 3, 5, 7, 3, 7]],
    [[7, 5, 3, 7, 3, 2], [3, 2, 2, 0, 7, 5], [7, 5, 2, 0, 6, 4]],
    [[0, 4, 4, 6, 5, 7], [0, 4, 5, 7, 1, 5], [0, 2, 1, 3, 3, 7], [3, 7, 2, 6, 0, 2]],
    [
        [3, 1, 7, 3, 6, 2],
        [6, 2, 0, 1, 3, 1],
        [6, 4, 0, 1, 6, 2],
        [6, 4, 5, 1, 0, 1],
        [6, 4, 7, 5, 5, 1],
    ],
    [
        [4, 0, 6, 4, 7, 5],
        [7, 5, 1, 0, 4, 0],
        [7, 3, 1, 0, 7, 5],
        [7, 3, 2, 0, 1, 0],
        [7, 3, 6, 2, 2, 0],
    ],
    [[7, 3, 6, 2, 6, 4], [7, 5, 7, 3, 6, 4]],
    [[6, 2, 6, 7, 6, 4]],
    [[0, 4, 0, 1, 0, 2], [6, 7, 4, 6, 2, 6]],
    [[1, 0, 1, 5, 1, 3], [7, 6, 4, 6, 2, 6]],
    [[1, 3, 0, 2, 1, 5], [0, 2, 0, 4, 1, 5], [7, 6, 4, 6, 2, 6]],
    [[2, 3, 6, 7, 2, 0], [6, 7, 6, 4, 2, 0]],
    [[4, 0, 0, 1, 4, 6], [4, 6, 0, 1, 6, 7], [6, 7, 0, 1, 2, 3]],
    [[6, 4, 2, 0, 6, 7], [2, 0, 2, 3, 6, 7], [5, 1, 3, 1, 0, 1]],
    [[1, 5, 1, 3, 0, 4], [1, 3, 7, 6, 0, 4], [0, 4, 7, 6, 4, 6], [1, 3, 3, 2, 7, 6]],
    [[3, 2, 3, 1, 3, 7], [6, 4, 2, 6, 7, 6]],
    [[3, 7, 3, 2, 1, 3], [0, 2, 0, 4, 1, 0], [7, 6, 4, 6, 2, 6]],
    [[1, 5, 3, 7, 1, 0], [3, 7, 3, 2, 1, 0], [4, 6, 2, 6, 7, 6]],
    [[2, 0, 0, 4, 2, 3], [2, 3, 0, 4, 3, 7], [3, 7, 0, 4, 1, 5], [6, 4, 2, 6, 6, 7]],
    [[7, 6, 6, 4, 7, 3], [7, 3, 6, 4, 3, 1], [3, 1, 6, 4, 2, 0]],
    [[0, 1, 4, 6, 0, 4], [0, 1, 6, 7, 4, 6], [0, 1, 1, 3, 6, 7], [1, 3, 3, 7, 6, 7]],
    [[0, 2, 0, 1, 4, 6], [0, 1, 3, 7, 4, 6], [0, 1, 1, 5, 3, 7], [4, 6, 3, 7, 6, 7]],
    [[7, 3, 6, 7, 6, 4], [6, 4, 4, 0, 7, 3], [7, 3, 4, 0, 5, 1]],
    [[4, 0, 6, 2, 4, 5], [6, 2, 6, 7, 4, 5]],
    [[2, 6, 6, 7, 2, 0], [2, 0, 6, 7, 0, 1], [0, 1, 6, 7, 4, 5]],
    [[6, 7, 4, 5, 6, 2], [4, 5, 4, 0, 6, 2], [3, 1, 0, 1, 5, 1]],
    [[2, 0, 2, 6, 3, 1], [2, 6, 4, 5, 3, 1], [2, 6, 6, 7, 4, 5], [3, 1, 4, 5, 1, 5]],
    [[0, 2, 2, 3, 0, 4], [0, 4, 2, 3, 4, 5], [4, 5, 2, 3, 6, 7]],
    [[0, 1, 2, 3, 6, 7], [0, 1, 6, 7, 4, 5]],
    [[0, 2, 2, 3, 0, 4], [0, 4, 2, 3, 4, 5], [4, 5, 2, 3, 6, 7], [1, 3, 0, 1, 1, 5]],
    [[5, 4, 1, 5, 1, 3], [1, 3, 3, 2, 5, 4], [5, 4, 3, 2, 7, 6]],
    [[4, 0, 6, 2, 4, 5], [6, 2, 6, 7, 4, 5], [1, 3, 7, 3, 2, 3]],
    [[2, 6, 6, 7, 2, 0], [2, 0, 6, 7, 0, 1], [0, 1, 6, 7, 4, 5], [3, 7, 2, 3, 3, 1]],
    [[0, 1, 1, 5, 3, 7], [0, 1, 3, 7, 2, 3], [0, 4, 2, 6, 6, 7], [6, 7, 4, 5, 0, 4]],
    [
        [6, 2, 7, 6, 5, 4],
        [5, 4, 0, 2, 6, 2],
        [5, 1, 0, 2, 5, 4],
        [5, 1, 3, 2, 0, 2],
        [5, 1, 7, 3, 3, 2],
    ],
    [[3, 1, 3, 7, 2, 0], [3, 7, 5, 4, 2, 0], [2, 0, 5, 4, 0, 4], [3, 7, 7, 6, 5, 4]],
    [[1, 0, 3, 1, 3, 7], [3, 7, 7, 6, 1, 0], [1, 0, 7, 6, 5, 4]],
    [
        [1, 0, 5, 1, 7, 3],
        [7, 3, 2, 0, 1, 0],
        [7, 6, 2, 0, 7, 3],
        [7, 6, 4, 0, 2, 0],
        [7, 6, 5, 4, 4, 0],
    ],
    [[7, 6, 5, 4, 5, 1], [7, 3, 7, 6, 5, 1]],
    [[5, 7, 5, 1, 5, 4], [6, 2, 7, 6, 4, 6]],
    [[0, 2, 0, 4, 1, 0], [5, 4, 5, 7, 1, 5], [2, 6, 7, 6, 4, 6]],
    [[1, 0, 5, 4, 1, 3], [5, 4, 5, 7, 1, 3], [2, 6, 7, 6, 4, 6]],
    [[4, 5, 5, 7, 4, 0], [4, 0, 5, 7, 0, 2], [0, 2, 5, 7, 1, 3], [6, 7, 4, 6, 6, 2]],
    [[2, 3, 6, 7, 2, 0], [6, 7, 6, 4, 2, 0], [1, 5, 4, 5, 7, 5]],
    [[4, 0, 0, 1, 4, 6], [4, 6, 0, 1, 6, 7], [6, 7, 0, 1, 2, 3], [5, 1, 4, 5, 5, 7]],
    [[0, 2, 2, 3, 6, 7], [0, 2, 6, 7, 4, 6], [0, 1, 4, 5, 5, 7], [5, 7, 1, 3, 0, 1]],
    [
        [5, 4, 7, 5, 3, 1],
        [3, 1, 0, 4, 5, 4],
        [3, 2, 0, 4, 3, 1],
        [3, 2, 6, 4, 0, 4],
        [3, 2, 7, 6, 6, 4],
    ],
    [[5, 4, 5, 7, 1, 5], [3, 7, 3, 2, 1, 3], [4, 6, 2, 6, 7, 6]],
    [[1, 0, 0, 2, 0, 4], [1, 5, 5, 4, 5, 7], [3, 2, 1, 3, 3, 7], [2, 6, 7, 6, 4, 6]],
    [[7, 3, 3, 2, 7, 5], [7, 5, 3, 2, 5, 4], [5, 4, 3, 2, 1, 0], [6, 2, 7, 6, 6, 4]],
    [
        [0, 4, 2, 3, 0, 2],
        [0, 4, 3, 7, 2, 3],
        [0, 4, 4, 5, 3, 7],
        [4, 5, 5, 7, 3, 7],
        [6, 7, 4, 6, 2, 6],
    ],
    [[7, 6, 6, 4, 7, 3], [7, 3, 6, 4, 3, 1], [3, 1, 6, 4, 2, 0], [5, 4, 7, 5, 5, 1]],
    [
        [0, 1, 4, 6, 0, 4],
        [0, 1, 6, 7, 4, 6],
        [0, 1, 1, 3, 6, 7],
        [1, 3, 3, 7, 6, 7],
        [5, 7, 1, 5, 4, 5],
    ],
    [
        [6, 7, 4, 6, 0, 2],
        [0, 2, 3, 7, 6, 7],
        [0, 1, 3, 7, 0, 2],
        [0, 1, 5, 7, 3, 7],
        [0, 1, 4, 5, 5, 7],
    ],
    [[4, 0, 6, 7, 4, 6], [4, 0, 7, 3, 6, 7], [4, 0, 5, 7, 7, 3], [4, 5, 5, 7, 4, 0]],
    [[7, 5, 5, 1, 7, 6], [7, 6, 5, 1, 6, 2], [6, 2, 5, 1, 4, 0]],
    [[0, 2, 1, 5, 0, 1], [0, 2, 5, 7, 1, 5], [0, 2, 2, 6, 5, 7], [2, 6, 6, 7, 5, 7]],
    [[1, 3, 1, 0, 5, 7], [1, 0, 2, 6, 5, 7], [5, 7, 2, 6, 7, 6], [1, 0, 0, 4, 2, 6]],
    [[2, 0, 6, 2, 6, 7], [6, 7, 7, 5, 2, 0], [2, 0, 7, 5, 3, 1]],
    [[0, 4, 0, 2, 1, 5], [0, 2, 6, 7, 1, 5], [0, 2, 2, 3, 6, 7], [1, 5, 6, 7, 5, 7]],
    [[7, 6, 5, 7, 5, 1], [5, 1, 1, 0, 7, 6], [7, 6, 1, 0, 3, 2]],
    [
        [2, 0, 3, 2, 7, 6],
        [7, 6, 4, 0, 2, 0],
        [7, 5, 4, 0, 7, 6],
        [7, 5, 1, 0, 4, 0],
        [7, 5, 3, 1, 1, 0],
    ],
    [[7, 5, 3, 1, 3, 2], [7, 6, 7, 5, 3, 2]],
    [[7, 5, 5, 1, 7, 6], [7, 6, 5, 1, 6, 2], [6, 2, 5, 1, 4, 0], [3, 1, 7, 3, 3, 2]],
    [
        [0, 2, 1, 5, 0, 1],
        [0, 2, 5, 7, 1, 5],
        [0, 2, 2, 6, 5, 7],
        [2, 6, 6, 7, 5, 7],
        [3, 7, 2, 3, 1, 3],
    ],
    [
        [3, 7, 2, 3, 0, 1],
        [0, 1, 5, 7, 3, 7],
        [0, 4, 5, 7, 0, 1],
        [0, 4, 6, 7, 5, 7],
        [0, 4, 2, 6, 6, 7],
    ],
    [[2, 0, 3, 7, 2, 3], [2, 0, 7, 5, 3, 7], [2, 0, 6, 7, 7, 5], [2, 6, 6, 7, 2, 0]],
    [
        [5, 7, 1, 5, 0, 4],
        [0, 4, 6, 7, 5, 7],
        [0, 2, 6, 7, 0, 4],
        [0, 2, 3, 7, 6, 7],
        [0, 2, 1, 3, 3, 7],
    ],
    [[1, 0, 5, 7, 1, 5], [1, 0, 7, 6, 5, 7], [1, 0, 3, 7, 7, 6], [1, 3, 3, 7, 1, 0]],
    [[0, 2, 0, 1, 0, 4], [3, 7, 6, 7, 5, 7]],
    [[7, 5, 7, 3, 7, 6]],
    [[7, 3, 7, 5, 7, 6]],
    [[0, 1, 0, 2, 0, 4], [6, 7, 3, 7, 5, 7]],
    [[1, 3, 1, 0, 1, 5], [7, 6, 3, 7, 5, 7]],
    [[0, 4, 1, 5, 0, 2], [1, 5, 1, 3, 0, 2], [6, 7, 3, 7, 5, 7]],
    [[2, 6, 2, 0, 2, 3], [7, 5, 6, 7, 3, 7]],
    [[0, 1, 2, 3, 0, 4], [2, 3, 2, 6, 0, 4], [5, 7, 6, 7, 3, 7]],
    [[1, 5, 1, 3, 0, 1], [2, 3, 2, 6, 0, 2], [5, 7, 6, 7, 3, 7]],
    [[3, 2, 2, 6, 3, 1], [3, 1, 2, 6, 1, 5], [1, 5, 2, 6, 0, 4], [7, 6, 3, 7, 7, 5]],
    [[3, 1, 7, 5, 3, 2], [7, 5, 7, 6, 3, 2]],
    [[7, 6, 3, 2, 7, 5], [3, 2, 3, 1, 7, 5], [4, 0, 1, 0, 2, 0]],
    [[5, 7, 7, 6, 5, 1], [5, 1, 7, 6, 1, 0], [1, 0, 7, 6, 3, 2]],
    [[2, 3, 2, 0, 6, 7], [2, 0, 1, 5, 6, 7], [2, 0, 0, 4, 1, 5], [6, 7, 1, 5, 7, 5]],
    [[6, 2, 2, 0, 6, 7], [6, 7, 2, 0, 7, 5], [7, 5, 2, 0, 3, 1]],
    [[0, 4, 0, 1, 2, 6], [0, 1, 5, 7, 2, 6], [2, 6, 5, 7, 6, 7], [0, 1, 1, 3, 5, 7]],
    [[1, 5, 0, 2, 1, 0], [1, 5, 2, 6, 0, 2], [1, 5, 5, 7, 2, 6], [5, 7, 7, 6, 2, 6]],
    [[5, 1, 7, 5, 7, 6], [7, 6, 6, 2, 5, 1], [5, 1, 6, 2, 4, 0]],
    [[4, 5, 4, 0, 4, 6], [7, 3, 5, 7, 6, 7]],
    [[0, 2, 4, 6, 0, 1], [4, 6, 4, 5, 0, 1], [3, 7, 5, 7, 6, 7]],
    [[4, 6, 4, 5, 0, 4], [1, 5, 1, 3, 0, 1], [6, 7, 3, 7, 5, 7]],
    [[5, 1, 1, 3, 5, 4], [5, 4, 1, 3, 4, 6], [4, 6, 1, 3, 0, 2], [7, 3, 5, 7, 7, 6]],
    [[2, 3, 2, 6, 0, 2], [4, 6, 4, 5, 0, 4], [3, 7, 5, 7, 6, 7]],
    [[6, 4, 4, 5, 6, 2], [6, 2, 4, 5, 2, 3], [2, 3, 4, 5, 0, 1], [7, 5, 6, 7, 7, 3]],
    [[0, 1, 1, 5, 1, 3], [0, 2, 2, 3, 2, 6], [4, 5, 0, 4, 4, 6], [5, 7, 6, 7, 3, 7]],
    [
        [1, 3, 5, 4, 1, 5],
        [1, 3, 4, 6, 5, 4],
        [1, 3, 3, 2, 4, 6],
        [3, 2, 2, 6, 4, 6],
        [7, 6, 3, 7, 5, 7],
    ],
    [[3, 1, 7, 5, 3, 2], [7, 5, 7, 6, 3, 2], [0, 4, 6, 4, 5, 4]],
    [[1, 0, 0, 2, 4, 6], [1, 0, 4, 6, 5, 4], [1, 3, 5, 7, 7, 6], [7, 6, 3, 2, 1, 3]],
    [[5, 7, 7, 6, 5, 1], [5, 1, 7, 6, 1, 0], [1, 0, 7, 6, 3, 2], [4, 6, 5, 4, 4, 0]],
    [
        [7, 5, 6, 7, 2, 3],
        [2, 3, 1, 5, 7, 5],
        [2, 0, 1, 5, 2, 3],
        [2, 0, 4, 5, 1, 5],
        [2, 0, 6, 4, 4, 5],
    ],
    [[6, 2, 2, 0, 6, 7], [6, 7, 2, 0, 7, 5], [7, 5, 2, 0, 3, 1], [4, 0, 6, 4, 4, 5]],
    [
        [4, 6, 5, 4, 1, 0],
        [1, 0, 2, 6, 4, 6],
        [1, 3, 2, 6, 1, 0],
        [1, 3, 7, 6, 2, 6],
        [1, 3, 5, 7, 7, 6],
    ],
    [
        [1, 5, 0, 2, 1, 0],
        [1, 5, 2, 6, 0, 2],
        [1, 5, 5, 7, 2, 6],
        [5, 7, 7, 6, 2, 6],
        [4, 6, 5, 4, 0, 4],
    ],
    [[5, 1, 4, 6, 5, 4], [5, 1, 6, 2, 4, 6], [5, 1, 7, 6, 6, 2], [5, 7, 7, 6, 5, 1]],
    [[5, 4, 7, 6, 5, 1], [7, 6, 7, 3, 5, 1]],
    [[7, 3, 5, 1, 7, 6], [5, 1, 5, 4, 7, 6], [2, 0, 4, 0, 1, 0]],
    [[3, 1, 1, 0, 3, 7], [3, 7, 1, 0, 7, 6], [7, 6, 1, 0, 5, 4]],
    [[0, 2, 0, 4, 1, 3], [0, 4, 6, 7, 1, 3], [1, 3, 6, 7, 3, 7], [0, 4, 4, 5, 6, 7]],
    [[5, 4, 7, 6, 5, 1], [7, 6, 7, 3, 5, 1], [0, 2, 3, 2, 6, 2]],
    [[1, 5, 5, 4, 7, 6], [1, 5, 7, 6, 3, 7], [1, 0, 3, 2, 2, 6], [2, 6, 0, 4, 1, 0]],
    [[3, 1, 1, 0, 3, 7], [3, 7, 1, 0, 7, 6], [7, 6, 1, 0, 5, 4], [2, 0, 3, 2, 2, 6]],
    [
        [2, 3, 6, 2, 4, 0],
        [4, 0, 1, 3, 2, 3],
        [4, 5, 1, 3, 4, 0],
        [4, 5, 7, 3, 1, 3],
        [4, 5, 6, 7, 7, 3],
    ],
    [[1, 5, 5, 4, 1, 3], [1, 3, 5, 4, 3, 2], [3, 2, 5, 4, 7, 6]],
    [[1, 5, 5, 4, 1, 3], [1, 3, 5, 4, 3, 2], [3, 2, 5, 4, 7, 6], [0, 4, 1, 0, 0, 2]],
    [[1, 0, 5, 4, 7, 6], [1, 0, 7, 6, 3, 2]],
    [[2, 3, 0, 2, 0, 4], [0, 4, 4, 5, 2, 3], [2, 3, 4, 5, 6, 7]],
    [[1, 3, 1, 5, 0, 2], [1, 5, 7, 6, 0, 2], [1, 5, 5, 4, 7, 6], [0, 2, 7, 6, 2, 6]],
    [
        [5, 1, 4, 5, 6, 7],
        [6, 7, 3, 1, 5, 1],
        [6, 2, 3, 1, 6, 7],
        [6, 2, 0, 1, 3, 1],
        [6, 2, 4, 0, 0, 1],
    ],
    [[6, 7, 2, 6, 2, 0], [2, 0, 0, 1, 6, 7], [6, 7, 0, 1, 4, 5]],
    [[6, 2, 4, 0, 4, 5], [6, 7, 6, 2, 4, 5]],
    [[6, 7, 7, 3, 6, 4], [6, 4, 7, 3, 4, 0], [4, 0, 7, 3, 5, 1]],
    [[1, 5, 1, 0, 3, 7], [1, 0, 4, 6, 3, 7], [1, 0, 0, 2, 4, 6], [3, 7, 4, 6, 7, 6]],
    [[1, 0, 3, 7, 1, 3], [1, 0, 7, 6, 3, 7], [1, 0, 0, 4, 7, 6], [0, 4, 4, 6, 7, 6]],
    [[6, 4, 7, 6, 7, 3], [7, 3, 3, 1, 6, 4], [6, 4, 3, 1, 2, 0]],
    [[6, 7, 7, 3, 6, 4], [6, 4, 7, 3, 4, 0], [4, 0, 7, 3, 5, 1], [2, 3, 6, 2, 2, 0]],
    [
        [7, 6, 3, 7, 1, 5],
        [1, 5, 4, 6, 7, 6],
        [1, 0, 4, 6, 1, 5],
        [1, 0, 2, 6, 4, 6],
        [1, 0, 3, 2, 2, 6],
    ],
    [
        [1, 0, 3, 7, 1, 3],
        [1, 0, 7, 6, 3, 7],
        [1, 0, 0, 4, 7, 6],
        [0, 4, 4, 6, 7, 6],
        [2, 6, 0, 2, 3, 2],
    ],
    [[3, 1, 7, 6, 3, 7], [3, 1, 6, 4, 7, 6], [3, 1, 2, 6, 6, 4], [3, 2, 2, 6, 3, 1]],
    [[3, 2, 3, 1, 7, 6], [3, 1, 0, 4, 7, 6], [7, 6, 0, 4, 6, 4], [3, 1, 1, 5, 0, 4]],
    [
        [0, 1, 2, 0, 6, 4],
        [6, 4, 5, 1, 0, 1],
        [6, 7, 5, 1, 6, 4],
        [6, 7, 3, 1, 5, 1],
        [6, 7, 2, 3, 3, 1],
    ],
    [[0, 1, 4, 0, 4, 6], [4, 6, 6, 7, 0, 1], [0, 1, 6, 7, 2, 3]],
    [[6, 7, 2, 3, 2, 0], [6, 4, 6, 7, 2, 0]],
    [
        [2, 6, 0, 2, 1, 3],
        [1, 3, 7, 6, 2, 6],
        [1, 5, 7, 6, 1, 3],
        [1, 5, 4, 6, 7, 6],
        [1, 5, 0, 4, 4, 6],
    ],
    [[1, 5, 1, 0, 1, 3], [4, 6, 7, 6, 2, 6]],
    [[0, 1, 2, 6, 0, 2], [0, 1, 6, 7, 2, 6], [0, 1, 4, 6, 6, 7], [0, 4, 4, 6, 0, 1]],
    [[6, 7, 6, 2, 6, 4]],
    [[6, 2, 7, 3, 6, 4], [7, 3, 7, 5, 6, 4]],
    [[7, 5, 6, 4, 7, 3], [6, 4, 6, 2, 7, 3], [1, 0, 2, 0, 4, 0]],
    [[6, 2, 7, 3, 6, 4], [7, 3, 7, 5, 6, 4], [0, 1, 5, 1, 3, 1]],
    [[2, 0, 0, 4, 1, 5], [2, 0, 1, 5, 3, 1], [2, 6, 3, 7, 7, 5], [7, 5, 6, 4, 2, 6]],
    [[3, 7, 7, 5, 3, 2], [3, 2, 7, 5, 2, 0], [2, 0, 7, 5, 6, 4]],
    [[3, 2, 3, 7, 1, 0], [3, 7, 6, 4, 1, 0], [3, 7, 7, 5, 6, 4], [1, 0, 6, 4, 0, 4]],
    [[3, 7, 7, 5, 3, 2], [3, 2, 7, 5, 2, 0], [2, 0, 7, 5, 6, 4], [1, 5, 3, 1, 1, 0]],
    [
        [7, 3, 5, 7, 4, 6],
        [4, 6, 2, 3, 7, 3],
        [4, 0, 2, 3, 4, 6],
        [4, 0, 1, 3, 2, 3],
        [4, 0, 5, 1, 1, 3],
    ],
    [[2, 3, 3, 1, 2, 6], [2, 6, 3, 1, 6, 4], [6, 4, 3, 1, 7, 5]],
    [[2, 3, 3, 1, 2, 6], [2, 6, 3, 1, 6, 4], [6, 4, 3, 1, 7, 5], [0, 1, 2, 0, 0, 4]],
    [[1, 0, 1, 5, 3, 2], [1, 5, 4, 6, 3, 2], [3, 2, 4, 6, 2, 6], [1, 5, 5, 7, 4, 6]],
    [
        [0, 2, 4, 0, 5, 1],
        [5, 1, 3, 2, 0, 2],
        [5, 7, 3, 2, 5, 1],
        [5, 7, 6, 2, 3, 2],
        [5, 7, 4, 6, 6, 2],
    ],
    [[2, 0, 3, 1, 7, 5], [2, 0, 7, 5, 6, 4]],
    [[4, 6, 0, 4, 0, 1], [0, 1, 1, 3, 4, 6], [4, 6, 1, 3, 5, 7]],
    [[0, 2, 1, 0, 1, 5], [1, 5, 5, 7, 0, 2], [0, 2, 5, 7, 4, 6]],
    [[5, 7, 4, 6, 4, 0], [5, 1, 5, 7, 4, 0]],
    [[5, 4, 4, 0, 5, 7], [5, 7, 4, 0, 7, 3], [7, 3, 4, 0, 6, 2]],
    [[0, 1, 0, 2, 4, 5], [0, 2, 3, 7, 4, 5], [4, 5, 3, 7, 5, 7], [0, 2, 2, 6, 3, 7]],
    [[5, 4, 4, 0, 5, 7], [5, 7, 4, 0, 7, 3], [7, 3, 4, 0, 6, 2], [1, 0, 5, 1, 1, 3]],
    [
        [1, 5, 3, 1, 2, 0],
        [2, 0, 4, 5, 1, 5],
        [2, 6, 4, 5, 2, 0],
        [2, 6, 7, 5, 4, 5],
        [2, 6, 3, 7, 7, 5],
    ],
    [[2, 3, 0, 4, 2, 0], [2, 3, 4, 5, 0, 4], [2, 3, 3, 7, 4, 5], [3, 7, 7, 5, 4, 5]],
    [[3, 2, 7, 3, 7, 5], [7, 5, 5, 4, 3, 2], [3, 2, 5, 4, 1, 0]],
    [
        [2, 3, 0, 4, 2, 0],
        [2, 3, 4, 5, 0, 4],
        [2, 3, 3, 7, 4, 5],
        [3, 7, 7, 5, 4, 5],
        [1, 5, 3, 1, 0, 1],
    ],
    [[3, 2, 1, 5, 3, 1], [3, 2, 5, 4, 1, 5], [3, 2, 7, 5, 5, 4], [3, 7, 7, 5, 3, 2]],
    [[2, 6, 2, 3, 0, 4], [2, 3, 7, 5, 0, 4], [2, 3, 3, 1, 7, 5], [0, 4, 7, 5, 4, 5]],
    [
        [3, 2, 1, 3, 5, 7],
        [5, 7, 6, 2, 3, 2],
        [5, 4, 6, 2, 5, 7],
        [5, 4, 0, 2, 6, 2],
        [5, 4, 1, 0, 0, 2],
    ],
    [
        [4, 5, 0, 4, 2, 6],
        [2, 6, 7, 5, 4, 5],
        [2, 3, 7, 5, 2, 6],
        [2, 3, 1, 5, 7, 5],
        [2, 3, 0, 1, 1, 5],
    ],
    [[2, 3, 2, 0, 2, 6], [1, 5, 7, 5, 4, 5]],
    [[5, 7, 4, 5, 4, 0], [4, 0, 0, 2, 5, 7], [5, 7, 0, 2, 1, 3]],
    [[5, 4, 1, 0, 1, 3], [5, 7, 5, 4, 1, 3]],
    [[0, 2, 4, 5, 0, 4], [0, 2, 5, 7, 4, 5], [0, 2, 1, 5, 5, 7], [0, 1, 1, 5, 0, 2]],
    [[5, 4, 5, 1, 5, 7]],
    [[4, 6, 6, 2, 4, 5], [4, 5, 6, 2, 5, 1], [5, 1, 6, 2, 7, 3]],
    [[4, 6, 6, 2, 4, 5], [4, 5, 6, 2, 5, 1], [5, 1, 6, 2, 7, 3], [0, 2, 4, 0, 0, 1]],
    [[3, 7, 3, 1, 2, 6], [3, 1, 5, 4, 2, 6], [3, 1, 1, 0, 5, 4], [2, 6, 5, 4, 6, 4]],
    [
        [6, 4, 2, 6, 3, 7],
        [3, 7, 5, 4, 6, 4],
        [3, 1, 5, 4, 3, 7],
        [3, 1, 0, 4, 5, 4],
        [3, 1, 2, 0, 0, 4],
    ],
    [[2, 0, 2, 3, 6, 4], [2, 3, 1, 5, 6, 4], [6, 4, 1, 5, 4, 5], [2, 3, 3, 7, 1, 5]],
    [
        [0, 4, 1, 0, 3, 2],
        [3, 2, 6, 4, 0, 4],
        [3, 7, 6, 4, 3, 2],
        [3, 7, 5, 4, 6, 4],
        [3, 7, 1, 5, 5, 4],
    ],
    [
        [1, 3, 0, 1, 4, 5],
        [4, 5, 7, 3, 1, 3],
        [4, 6, 7, 3, 4, 5],
        [4, 6, 2, 3, 7, 3],
        [4, 6, 0, 2, 2, 3],
    ],
    [[3, 7, 3, 1, 3, 2], [5, 4, 6, 4, 0, 4]],
    [[3, 1, 2, 6, 3, 2], [3, 1, 6, 4, 2, 6], [3, 1, 1, 5, 6, 4], [1, 5, 5, 4, 6, 4]],
    [
        [3, 1, 2, 6, 3, 2],
        [3, 1, 6, 4, 2, 6],
        [3, 1, 1, 5, 6, 4],
        [1, 5, 5, 4, 6, 4],
        [0, 4, 1, 0, 2, 0],
    ],
    [[4, 5, 6, 4, 6, 2], [6, 2, 2, 3, 4, 5], [4, 5, 2, 3, 0, 1]],
    [[2, 3, 6, 4, 2, 6], [2, 3, 4, 5, 6, 4], [2, 3, 0, 4, 4, 5], [2, 0, 0, 4, 2, 3]],
    [[1, 3, 5, 1, 5, 4], [5, 4, 4, 6, 1, 3], [1, 3, 4, 6, 0, 2]],
    [[1, 3, 0, 4, 1, 0], [1, 3, 4, 6, 0, 4], [1, 3, 5, 4, 4, 6], [1, 5, 5, 4, 1, 3]],
    [[4, 6, 0, 2, 0, 1], [4, 5, 4, 6, 0, 1]],
    [[4, 6, 4, 0, 4, 5]],
    [[4, 0, 6, 2, 7, 3], [4, 0, 7, 3, 5, 1]],
    [[1, 5, 0, 1, 0, 2], [0, 2, 2, 6, 1, 5], [1, 5, 2, 6, 3, 7]],
    [[3, 7, 1, 3, 1, 0], [1, 0, 0, 4, 3, 7], [3, 7, 0, 4, 2, 6]],
    [[3, 1, 2, 0, 2, 6], [3, 7, 3, 1, 2, 6]],
    [[0, 4, 2, 0, 2, 3], [2, 3, 3, 7, 0, 4], [0, 4, 3, 7, 1, 5]],
    [[3, 7, 1, 5, 1, 0], [3, 2, 3, 7, 1, 0]],
    [[0, 4, 1, 3, 0, 1], [0, 4, 3, 7, 1, 3], [0, 4, 2, 3, 3, 7], [0, 2, 2, 3, 0, 4]],
    [[3, 7, 3, 1, 3, 2]],
    [[2, 6, 3, 2, 3, 1], [3, 1, 1, 5, 2, 6], [2, 6, 1, 5, 0, 4]],
    [[1, 5, 3, 2, 1, 3], [1, 5, 2, 6, 3, 2], [1, 5, 0, 2, 2, 6], [1, 0, 0, 2, 1, 5]],
    [[2, 3, 0, 1, 0, 4], [2, 6, 2, 3, 0, 4]],
    [[2, 3, 2, 0, 2, 6]],
    [[1, 5, 0, 4, 0, 2], [1, 3, 1, 5, 0, 2]],
    [[1, 5, 1, 0, 1, 3]],
    [[0, 2, 0, 1, 0, 4]],
    [],
]




RENDERER_CONFIG = {}




RENDERER_MLP_ORIGINAL_PREFIX = "renderer.nerstf"

RENDERER_PARAMS_PROJ_ORIGINAL_PREFIX = "encoder.params_proj"




# done renderer


# TODO maybe document and/or can do more efficiently (build indices in for loop and extract once for each split?)


# done unet utils


# Driver functions








# prior model will expect clip_mean and clip_std, whic are missing from the state_dict
PRIOR_EXPECTED_MISSING_KEYS = ["clip_mean", "clip_std"]






if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("--dump_path", default=None, type=str, required=True, help="Path to the output model.")

    parser.add_argument(
        "--prior_checkpoint_path",
        default=None,
        type=str,
        required=False,
        help="Path to the prior checkpoint to convert.",
    )

    parser.add_argument(
        "--prior_image_checkpoint_path",
        default=None,
        type=str,
        required=False,
        help="Path to the prior_image checkpoint to convert.",
    )

    parser.add_argument(
        "--transmitter_checkpoint_path",
        default=None,
        type=str,
        required=False,
        help="Path to the transmitter checkpoint to convert.",
    )

    parser.add_argument(
        "--checkpoint_load_device",
        default="cpu",
        type=str,
        required=False,
        help="The device passed to `map_location` when loading checkpoints.",
    )

    parser.add_argument(
        "--debug",
        default=None,
        type=str,
        required=False,
        help="Only run a specific stage of the convert script. Used for debugging",
    )

    args = parser.parse_args()

    print(f"loading checkpoints to {args.checkpoint_load_device}")

    checkpoint_map_location = torch.device(args.checkpoint_load_device)

    if args.debug is not None:
        print(f"debug: only executing {args.debug}")

    if args.debug is None:
        print("YiYi TO-DO")
    elif args.debug == "prior":
        prior_model = prior(args=args, checkpoint_map_location=checkpoint_map_location)
        prior_model.save_pretrained(args.dump_path)
    elif args.debug == "prior_image":
        prior_model = prior_image(args=args, checkpoint_map_location=checkpoint_map_location)
        prior_model.save_pretrained(args.dump_path)
    elif args.debug == "renderer":
        renderer_model = renderer(args=args, checkpoint_map_location=checkpoint_map_location)
        renderer_model.save_pretrained(args.dump_path)
    else:
        raise ValueError(f"unknown debug value : {args.debug}")