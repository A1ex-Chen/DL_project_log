def dense_simple(weights_path=None, input_shape=(784,), nonlinearity='relu'):
    model = Sequential()
    model.add(Dense(512, input_shape=input_shape, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(256, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(128, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(64, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(32, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(16, activation=nonlinearity))
    BatchNormalization()
    model.add(Dense(32))
    BatchNormalization()
    model.add(Dense(64))
    BatchNormalization()
    model.add(Dense(128))
    BatchNormalization()
    model.add(Dense(256))
    BatchNormalization()
    model.add(Dense(512))
    BatchNormalization()
    model.add(Dense(input_shape[0], activation='linear'))
    if weights_path:
        print('Loading Model')
        model.load_weights(weights_path)
    return model
